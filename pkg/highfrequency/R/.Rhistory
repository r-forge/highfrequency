library(RTAQ)
library(highfrequency);
highfrequency:::rSignature
m = rZero( rdata=pdata2, period = 240, align.by = "seconds", align.period = 1, cts = TRUE, makeReturns = FALSE );
data(sample_real5minprices);
prices = sample_real5minprices;
#################### !! STILL TODO Examples for all realized measures !!  ###################
# Univariate:
a = minRV( rdata=prices, align.by="minutes", align.period=30, makeReturns=TRUE);
b = medRV( rdata=prices, align.by="minutes", align.period=30, makeReturns=TRUE);
a/b;
prices = abs(cbind(prices,rnorm(length(prices))*prices));
head(prices);
pdata = list(prices[,1], rnorm(length(prices[,2]))*prices[,2]);
pdata2 = list(prices['2005-03-04'][,1], abs(rnorm(length(prices['2005-03-04']))*prices['2005-03-04'])[,2]);
m = rZero( rdata=pdata2, period = 240, align.by = "seconds", align.period = 1, cts = TRUE, makeReturns = FALSE );
m
m = rZero( rdata=pdata, period = 240, align.by = "seconds", align.period = 1, cts = TRUE, makeReturns = FALSE );
m
?harModel
library(highfrequency)
?highfrequency
library(highfrequency)
?highfrequency
?highfrequency
library(highfrequency)
data(sample_real5minprices);
prices = sample_real5minprices;
setwd("/Users/jonathancornelissen/Dropbox/gsoc-rtaq/highfrequency/highfrequency/pkg/highfrequency/R");
source("realized.R");
data(sample_real5minprices);
prices = sample_real5minprices;
prices = abs(cbind(prices,rnorm(length(prices))*prices));
head(prices);
pdata = list(prices[,1], rnorm(length(prices[,2]))*prices[,2]);
pdata2 = list(prices['2005-03-04'][,1], abs(rnorm(length(prices['2005-03-04']))*prices['2005-03-04'])[,2]);
n = rAccumulation(x = pdata[[1]], period = 1, y = NULL, align.period = 1, plotit = FALSE, cts = TRUE, makeReturns = FALSE);
n
rMarginal
rMarginal(x  = pdata[[1]], y = NULL, period=1, align.by = "seconds", align.period = 1,
plotit = FALSE, cts = TRUE, makeReturns = FALSE)
args(rCumSum)
rCumSum( x = pdata[[1]], period = 1, align.by = "seconds", align.period = 1,
plotit = FALSE, type = "l", cts = TRUE, makeReturns = FALSE)
rCumSum( x = pdata2[[1]], period = 1, align.by = "seconds", align.period = 1,
plotit = FALSE, type = "l", cts = TRUE, makeReturns = FALSE)
rCumSum( x = pdata2, period = 1, align.by = "seconds", align.period = 1,
plotit = FALSE, type = "l", cts = TRUE, makeReturns = FALSE)
pdata2
rCumSum( x = pdata2[[1]], period = 1, align.by = "seconds", align.period = 1,
plotit = FALSE, type = "l", cts = TRUE, makeReturns = FALSE)
rCumSum( x = pdata2[[1]], y=NULL, period = 1, align.by = "seconds", align.period = 1,
plotit = FALSE, type = "l", cts = TRUE, makeReturns = FALSE)
rCumSum( x = pdata2[[1]],  period = 1, align.by = "seconds", align.period = 1,
plotit = FALSE, type = "l", cts = TRUE, makeReturns = FALSE)
traceback()
source("realized.R");
rCumSum( x = pdata2[[1]],  period = 1, align.by = "seconds", align.period = 1,
plotit = FALSE, type = "l", cts = TRUE, makeReturns = FALSE)
rCumSum( x = pdata[[1]],  period = 1, align.by = "seconds", align.period = 1,
plotit = FALSE, type = "l", cts = TRUE, makeReturns = FALSE)
args(rScatterReturns)
rScatterReturns(x, y, period, align.by = "seconds", align.period = 1,
numbers = FALSE, xlim = NULL, ylim = NULL, plotit = TRUE,
pch = NULL, cts = TRUE, makeReturns = FALSE, scale.size = 0,
col.change = FALSE, ...)
rScatterReturns
rScatterReturns(x, y, period, align.by = "seconds", align.period = 1,
numbers = FALSE, xlim = NULL, ylim = NULL, plotit = TRUE,
pch = NULL, cts = TRUE, makeReturns = FALSE, scale.size = 0,
col.change = FALSE)
rScatterReturns(x= pdata[[1]], y= pdata[[2]], period, align.by = "seconds", align.period = 1,
numbers = FALSE, xlim = NULL, ylim = NULL, plotit = TRUE,
pch = NULL, cts = TRUE, makeReturns = FALSE, scale.size = 0,
col.change = FALSE)
str(pdata[[1]])
str(pdata2[[1]])
rScatterReturns(x= pdata2[[1]], y= pdata2[[2]], period, align.by = "seconds", align.period = 1,
numbers = FALSE, xlim = NULL, ylim = NULL, plotit = TRUE,
pch = NULL, cts = TRUE, makeReturns = FALSE, scale.size = 0,
col.change = FALSE)
rScatterReturns(x= pdata2[[1]], y= pdata2[[2]], period=1, align.by = "seconds", align.period = 1,
numbers = FALSE, xlim = NULL, ylim = NULL, plotit = TRUE,
pch = NULL, cts = TRUE, makeReturns = FALSE, scale.size = 0,
col.change = FALSE)
rScatterReturns(x= pdata2[[1]], y= pdata2[[2]], period=1, align.by = "seconds", align.period = 1,
numbers = FALSE, xlim = NULL, ylim = NULL, plotit = TRUE,
pch = NULL, cts = TRUE, makeReturns = FALSE, scale.size = 0,
col.change = FALSE)
args(rSignature)
rSignature(range, x= pdata2[[1]], y = NULL, type = "naive", cor = FALSE, rvargs = list(),
align.by = "seconds", align.period = 1, xscale = 1, plotit = FALSE,
cts = TRUE, makeReturns = FALSE, iteration.funct = NULL,
iterations = NULL, lags = NULL)
?rSignature
?rSignature
library(highfrequency)
source("realized.R");
?rSignature
rSignature
library(highfrequency)
?rSignature
source("realized.R");
?rSignature
rSignature(range = (1:60)*10+1, x= pdata2[[1]], y = NULL, type = "naive", cor = FALSE, rvargs = list(),
align.by = "seconds", align.period = 1, xscale = 1, plotit = FALSE,
cts = TRUE, makeReturns = FALSE, iteration.funct = NULL,
iterations = NULL, lags = NULL)
rSignature(range = (1:60), x= pdata2[[1]], y = NULL, type = "naive", cor = FALSE, rvargs = list(),
align.by = "seconds", align.period = 1, xscale = 1, plotit = FALSE,
cts = TRUE, makeReturns = FALSE, iteration.funct = NULL,
iterations = NULL, lags = NULL)
traceback
traceback()
library(realized)
rSignature(range = (1:60), x= pdata2[[1]], y = NULL, type = "naive", cor = FALSE, rvargs = list(),
align.by = "seconds", align.period = 1, xscale = 1, plotit = FALSE,
cts = TRUE, makeReturns = FALSE, iteration.funct = NULL,
iterations = NULL, lags = NULL)
.realized.variance <- function(x, y=NULL, type="naive", period = 1, align.by="seconds", align.period = 1, cor = FALSE, rvargs = list(), cts=TRUE,makeReturns=FALSE)
{
if(cor)
{
rvx <- do.call(paste("rv.", type, sep=""), c(rvargs,list(x=x, period=period, align.by=align.by, align.period=align.period, cts=cts, makeReturns=makeReturns)))
rvy <- do.call(paste("rv.", type, sep=""), c(rvargs,list(x=y, period=period, align.by=align.by, align.period=align.period, cts=cts, makeReturns=makeReturns)))
rcxy <- do.call(paste("rc.", type, sep=""),c(rvargs,list(x=x, y=y, period=period, align.by=align.by, align.period=align.period, cts=cts, makeReturns=makeReturns)))
rcxy/(sqrt(rvx)*sqrt(rvy))
}
else
{
funct <- paste(ifelse(is.null(y), "rv.", "rc."), type, sep="")
do.call(funct, c(rvargs, list(x=x, y=y, period=period, align.by=align.by, align.period=align.period, cts=cts, makeReturns=makeReturns)))
}
}
rSignature(range = (1:60), x= pdata2[[1]], y = NULL, type = "naive", cor = FALSE, rvargs = list(),
align.by = "seconds", align.period = 1, xscale = 1, plotit = FALSE,
cts = TRUE, makeReturns = FALSE, iteration.funct = NULL,
iterations = NULL, lags = NULL)
library(highfrequency)
args(rCumSum)
args(rZero)
rZero
data(sbux.xts)
data(lltc.xts)
rZero( rdata = list(sbux.xts, lltc.xts) , period = 60, align.by ="seconds", align.period=1)
data(sbux.xts)
data(lltc.xts)
rZero( rdata = list(sbux.xts, lltc.xts) , period = 60, align.by ="seconds", align.period=110)
library("RTAQ")
?convert
?RTAQ
libary("RTAQ")
library("RTAQ")
args(rCov)
library("realized")
args(rv.naive)
args(rv.naieve)
?realized
library("realized")
convert()
?RTAQ
